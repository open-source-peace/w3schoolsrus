<?php include '../include/head.php'; ?>
    <title>Учебник по кибербезопасности. Пароли. <?php include '../include/title.php'; ?></title>
    <meta name='description' content='Пароли. Надежность пароля. Что такое энтропия? Менеджеры паролей. Решения без пароля. Многофакторная аутентификация. Подбор и взлом пароля. Заполнение учетных данных. Услуги без аутентификации. Использование существующих учетных данных. Учебник по кибербезопасности. <?php include '../include/description.php'; ?>'>

<?php include '../include/topmenu.php'; ?>
<?php include '../include/leftmenu_cybersecurity.php'; ?>
<?php include '../include/before_content_cybersecurity.php'; ?>

    <article>
        <h1>Кибербезопасность. <span class="color_h1">Пароли</span></h1>
        <div class="w3-clear nextprev">
            <a class="w3-left w3-btn" href="cybersecurity_prenetration_testing.php">&#10094; Prev</a>
            <a class="w3-right w3-btn" href="cybersecurity_security_operations.php">Next &#10095;</a>
        </div>
        <hr>
        <p class="intro">Многие системы защищены простым паролем. Это не идеально, поскольку во многих случаях пароли могут быть легко взломаны, повторно использованы или иным образом использованы злоумышленниками. В этом разделе будут рассмотрены атаки и защиты, связанные с паролями.</p>
        <hr>

        <h2>Надежность пароля</h2>
        <p>Что определяет надежный пароль? Насколько сложен пароль? Сколько в нём символов? Какое количество специальных символов?</p>
        <p>Известный создатель комиксов xkcd.com блестяще показывает, как можно взломать пароли, в комиксе ниже. Просмотрите его на секунду и давайте обсудим дальше.</p>
        <div class="w3-note w3-panel"><b>Примечание</b>: Энтропия означает отсутствие предсказуемости. Чем выше энтропия, тем сложнее взломать стандартными средствами.</div>
        <p><img src="../images/img_password_strength.png" alt="Надёжность пароля" style="width:100%;max-width:1280px"></p>
        <p>Если мы рассмотрим первый пароль <em>Tr0ub4dor&amp;3</em>, этот пароль будет соответствовать большинству правил политики паролей, например, с заглавными буквами, цифрами, специальными символами и длиной 11 символов. Однако с этим паролем есть проблемы, такие как:</p>
        <ul>
            <li>Трудно вспомнить. Вы заменили первый символ O (буква) на 0 (число) или это был второй символ? Вы заменили символ на 4 или нет?</li>
            <li>Трудно печатать. Вы должны вводить разные буквы, цифры и специальные символы в особом порядке. Скорее всего, это будут не самые быстрые слова, набираемые на клавиатуре.</li>
            <li>Это не очень надёжно! Пароль основан на довольно распространённом слове и не даёт большой надежности, всего около 28 бит энтропии.</li>
        </ul>
        <p>Вместо того, чтобы выбирать пароли, у которых есть эти отрицательные факторы, мы можем значительно увеличить энтропию паролей простыми способами. Если мы рассмотрим пароль <em>CorrectHorseBatteryStaple</em>, мы увидим значительное улучшение пароля:</p>
        <ul>
            <li>Пароль легко набрать. Печатать обычными словами - это обычное дело для многих повседневных дел, и вы можете сделать это очень быстро.</li>
            <li>Легко запомнить. Используя визуальное изображение пароля, лошади, батареи, скобы и правильного слова, мы можем запомнить это намного легче.</li>
            <li>Он значительно сильнее противостоит большинству действий по взлому паролей! Он предлагает около 44 бит энтропии, что делает его действительно трудным для взлома.</li>
        </ul>
        <p>Такие пароли, как этот, называются парольными фразами и, как правило, намного лучше, чем простое слово с некоторой сложностью. Подумайте, как можно улучшить пароль, чтобы он стал еще надежнее и соответствовал правилам политики паролей, таким как специальные символы и заглавные буквы! Вы даже можете использовать пробелы в своем пароле, что сделает ввод парольных фраз ещё более естественным.</p>
        <hr>

        <h2>Менеджеры паролей</h2>
        <p>Записывать пароль в течение многих лет считалось плохой практикой, но так ли это на самом деле? Использование одного и того же пароля для нескольких онлайн-сервисов сопряжено со значительным риском: что, если одна из этих платформ будет взломана? Затем этот пароль будет скомпрометирован, и злоумышленники могут повторно использовать пароль во всех других службах, где он используется.</p>
        <p>Чтобы решить эту проблему, не рекомендуется повторно использовать один и тот же пароль в нескольких сервисах. Это действительно усложняет работу пользователей, поскольку от них требуется не только использовать уникальные пароли, но и в то же время создавать сложные и надёжные пароли! Диспетчер паролей помогает решить эту проблему, предлагая пользователям максимально безопасным способом записывать пароли в файл, базу данных или другую систему, делая пароли легкодоступными и гарантируя, что они надёжны и уникальны для разных сервисов.</p>
        <p>При правильной реализации менеджер паролей будет:</p>
        <ul>
            <li>Делать использование Интернета гораздо более безопасным.</li>
            <li>Повысит производительность, поскольку пароли для различных сервисов можно легко найти, скопировать и вставить в соответствующие сервисы, в которые пользователь хочет войти.</li>
            <li>Предлагает простые способы сброса и восстановления новых паролей при необходимости.</li>
        </ul>
        <p>Написание паролей считается гораздо меньшим риском для наших пользователей, чем повторное использование паролей. Да, это не идеальное решение, поскольку диспетчер паролей потенциально может быть взломан, однако это считается гораздо более безопасным подходом.</p>
        <hr>

        <h2>Решения без пароля</h2>
        <p>Что, если с паролями можно положить конец? Всегда есть кто-то, кто не может каждый день вводить более длинную парольную фразу в качестве пароля. Для этого может быть несколько причин, например:</p>
        <ul>
            <li>Сотрудники, не разбирающиеся в IT, в офисе.</li>
            <li>Врач, который ежедневно посещает много разных компьютеров в больнице, посещая разных пациентов в разных палатах.</li>
            <li>Трудно ввести пароль в системе, которая его требует.</li>
        </ul>
        <p>Разработка и внедрение систем, не требующих от пользователей ввода пароля, быстро развиваются. Вместо того, чтобы просить пользователей пройти аутентификацию с помощью пароля, что, можно разрешить им использовать, например:</p>
        <ul>
            <li>Какую-то часть человека, например лицо или отпечаток пальца.</li>
            <li>Какой-то предмет, что у них есть, например жетон или мобильный телефон.</li>
        </ul>
        <p>Здесь есть проблемы, но с точки зрения безопасности, действительно ли мы усугубляем проблему или улучшаем её для наших пользователей? Мы должны помнить, что мы не стремимся внедрять совершенные системы безопасности, они обычно находятся вне досягаемости и нереализуемы, поэтому вместо этого мы должны тщательно продумать, как мы можем ограничить угрозы и в то же время облегчить жизнь нашим пользователям. Пароли не идеальны, равно как и решения без пароля. Какой из них вы реализуете для своих пользователей?</p>
        <hr>

        <h2>Многофакторная аутентификация</h2>
        <p>По мере того, как мы узнаем, что независимо от того, какое решение используется для проверки пользователей, их учетные записи по-прежнему будут сопряжены со значительными рисками. Для снижения риска могут быть реализованы другие решения.</p>
        <p>Многофакторная аутентификация позволяет решениям не только проверять пользователя, например, на основе его пароля, но в то же время требовать от пользователей предоставления второго фактора, подтверждающего, кем они являются.</p>
        <p><img src="../images/img_multi-factor_authentication.png" alt="Многофакторная аутентификация" style="width:100%;max-width:1280px"></p>
        <p>Есть несколько разных способов узнать о втором факторе. Вот несколько примеров:</p>
        <ul>
            <li>Используйте приложение аутентификации на смартфоне, чтобы предоставить секретный код.</li>
            <li>Получите секретный код с помощью SMS (&quot;Служба коротких сообщений&quot;) на телефон.</li>
            <li>Используйте аппаратный токен для предоставления секретного кода.</li>
            <li>Предъявите отпечаток пальца или лицо, чтобы идентифицировать особу.</li>
        </ul>
        <p>Для всего вышеперечисленного требуется не только знать пароль, но и запрашивается второй элемент (фактор).</p>
        <p>Подобные решения иногда считаются очень агрессивными для пользователей. Чтобы решить эту проблему, можно применить концепцию DAC (&quot;Discretionary Access Control&quot; - &quot;Дискреционный контроль доступа&quot;). DAC позволяет решению для входа в систему решить, стоит ли бросать вызов пользователю с помощью многофакторного кода. Например, многофакторный подход может потребоваться только тогда, когда пользователь:</p>
        <ul>
            <li>Входит из нового места.</li>
            <li>Использует другой браузер или другое программное обеспечение для доступа к приложению.</li>
            <li>Пытается выполнить конфиденциальное действие в приложении, например изменить пароль или выполнить денежную транзакцию выше определенного порога.</li>
        </ul>
        <hr>

        <h2>Подбор пароля</h2>
        <p>Когда злоумышленники сталкиваются с приложениями и службами, у них может быть возможность подобрать пароль. Подбор пароля - это действие, при котором злоумышленники взаимодействуют с приложением по сети, пробуя списки различных комбинаций имён пользователей и паролей.</p>
        <p>Функция подбора пароля дает злоумышленнику возможность найти учётные записи со слабой комбинацией имени пользователя и пароля.</p>
        <p><img src="../svg/img_passwordguessing.svg" alt="Подбор пароля. Как подобрать пароль?" style="width:100%;max-width:1280px"></p>
        <p>Если злоумышленнику удаётся найти действительную учетную запись для входа в систему, перед злоумышленником открываются новые возможности. Подумайте, какие функции и данные теперь предоставляются злоумышленнику. Вот несколько примеров, когда злоумышленник успешно угадывает чей-то пароль:</p>
        <ul>
            <li>Злоумышленник получает доступ к электронной почте сотрудника. Внутри есть тысячи электронных писем, относящихся к многолетней истории. В электронных письмах передаются пароли, позволяющие злоумышленнику войти в большее количество систем. Кроме того, присутствуют сотни вложений, некоторые из которых могут содержать очень конфиденциальную информацию. </li>
            <li>Злоумышленники успешно угадывают пароль учетной записи администратора системы HVAC (&quot;Heating, Ventilation and Air Conditioning&quot; - &quot;Отопление, вентиляция и кондиционирование&quot;), в обязанности которой входит охлаждение серверной комнаты. Злоумышленники могут изменить параметры системы отопления, вентиляции и кондиционирования воздуха и путем тщательной модификации вызывают перегрев серверной комнаты.</li>
            <li>В Интернете доступна служба VPN, позволяющая сотрудникам подключаться к внутренним ресурсам. У одного из сотрудников слабый пароль, который злоумышленник угадывает несколько дней подряд. Злоумышленник получает доступ к службе VPN и теперь находится во внутренней сети организации. Отсюда злоумышленник устанавливает внутри организации программу-вымогатель.</li>
            <li>В Интернете развёрнуто веб-приложение. Оно не содержит очевидных уязвимостей извне, однако злоумышленники смогли угадать пароль к учетной записи обычного пользователя в системе. Поскольку компания, размещающая веб-приложение, доверяет своим пользователям, веб-безопасность внутри приложения была плохой. Отсюда злоумышленник мог использовать веб-эксплойты для компрометации сервера.</li>
        </ul>
        <p>Многие сетевые службы имеют встроенные учётные записи администратора, некоторые даже с паролем по умолчанию, который не изменился с момента его установки. Для каждой службы в сети злоумышленники могут попытаться войти в систему с учётными данными по умолчанию. Кроме того, злоумышленник может попробовать типичные и ненадёжные пароли. Вот несколько примеров типичных и ненадёжных паролей. Обратите внимание, что все они заканчиваются восклицательным знаком, чтобы аннулировать политику паролей. :</p>
        <table class="w3-table-all notranslate">
            <tr>
                <th>Пароль</th>
                <th>Комментарий</th>
            </tr>
            <tr>
                <td>Summer2021!</td>
                <td>Многие люди, в том числе службы поддержки компаний, сбрасывают пароли и устанавливают пароль на сезон года и год, в котором мы сейчас находимся.</td>
            </tr>
            <tr>
                <td>W3schools123!</td>
                <td>Название компании часто используется в качестве паролей людей. Число 123 и восклицательный знак (!) в конце выбирается пользователями для передачи политик паролей и усложнения.</td>
            </tr>
            <tr>
                <td>Rosalynn2006!</td>
                <td>Rosalynn, может быть, чей-то ребенок? Пользователи часто используют в качестве паролей что-то личное. Имена детей и, возможно, год их рождения очень популярны.</td>
            </tr>
            <tr>
                <td>Qwerty123456!</td>
                <td>Казалось бы, случайный пароль? Этот пароль часто используется, когда кто-то нажимает клавиши клавиатуры по порядку, а затем использует цифры, чтобы сделать то же самое.</td>
            </tr>
        </table>
        <p>THC-Hydra (https://github.com/vanhauser-thc/thc-hydra) позволяет нам легко настраивать списки имён пользователей и паролей для работы с множеством различных сервисов. Он поддерживает множество протоколов для атак, таких как:</p>
        <ul>
            <li>RDP ("Remote Desktop Protocol")</li>
            <li>FTP ("File Transfer Protocol")</li>
            <li>SMB ("Server Message Block")</li>
            <li>Telnet</li>
            <li>SSH ("Secure Sockets Host")</li>
        </ul>
        <p>Чтобы использовать THC-Hydra для нацеливания, например, на FTP, можно использовать следующую команду:</p>
        <div class="w3-example">
            <div class="w3-code notranslate">
                hydra -L common_usernames.txt -P common_passwords.txt ftp://localhost/
            </div></div>
        <p>Эта команда использует список общих имён пользователей и общих паролей, чтобы попробовать каждое из них с FTP-службой на локальном хосте или с IP-адресом по вашему выбору.</p>
        <hr>

        <h2>Заполнение учетных данных</h2>
        <p>Обычная атака, которую используют злоумышленники, - это ввод учётных данных. Она предполагает, что злоумышленники загружают огромные базы данных учётных данных и проверяют соответствующие учётные данные на сетевой службе. Утечка учётных данных происходит, когда сторонний сервис взломан, база данных украдена, а затем просочилась в Интернет, чтобы любой мог её скачать.</p>
        <p>К сожалению, многие пользователи повторно используют один и тот же пароль в разных службах, что позволяет атакам с использованием Credential Stuffing стать очень эффективными против организаций.</p>
        <div class="w3-panel w3-note"><b>Примечание</b>. Любой, включая вас, может поискать в Интернете просочившиеся базы данных, содержащие учётные данные и пароли. Взломать, когда пользователи не меняют пароли, не так уж и сложно!</div>
        <hr>

        <h2>Взлом паролей</h2>
        <p>В то время как Password Guessing - это онлайн-атака, взлом пароля - это офлайн-атака. В нём злоумышленники сначала крадут представления паролей у цели.</p>
        <p>Пароли обычно представлены в виде хэша пароля. Хэш - это способ хранить пароли пользователей, отправляя их через одностороннюю функцию, что делает невозможным изменение пароля, если не используется взлом пароля.</p>
        <p>Если злоумышленник может получить учётные данные из системы, эти учётные данные, скорее всего, будут защищены с помощью шифрования или хеширования. Хеширование - это односторонняя функция, которую нельзя вернуть в исходное значение.</p>
        <p>Для взлома паролей используются вычислительные мощности, то есть ЦП (&quot;Центральный процессор&quot;) и ГП (&quot;Графический процессор&quot;), чтобы попытаться подобрать пароль, который соответствует защищенным учетным данным, полученным из системы.</p>
        <div class="w3-panel w3-note"><b>Примечание</b>. Обычно графический процессор намного лучше справляется со взломом паролей, поскольку он имеет сотни микроядер, которые могут выполнять небольшие задачи самостоятельно. Это позволяет взломщику паролей работать намного быстрее, поскольку он может масштабировать действия по взлому на множество различных ядер.</div>
        <hr>

        <h2>Услуги без аутентификации</h2>
        <p>Изучая и обнаруживая приложения, иногда вы можете столкнуться с приложениями, которые не защищены аутентификацией. Эти приложения могут быть полезны злоумышленникам для изучения, например, используя поле поиска для поиска конфиденциальной информации.</p>
        <p>Многие приложения в сети можно свободно исследовать, иногда злоумышленникам сообщается точная дата, которую они ищут.</p>
        <p>При выполнении сопоставления сети и сканирования портов необходимо изучить каждую обнаруженную систему и службу.</p>
        <hr>

        <h2>Использование существующих учетных данных</h2>
        <p>Обычно злоумышленник уже использует учетные данные пользователей в среде. Например, если злоумышленник скомпрометировал чью-то компьютерную систему, он может повторно использовать учётные данные, уже используемые системой.</p>
        <p>Это дает злоумышленникам гораздо больше возможностей. Рассмотрим все приложения, которыми теперь можно было злоупотреблять. Например:</p>
        <ul>
            <li>Электронная почта </li>
            <li>SharePoint</li>
            <li>Управление персоналом и бухгалтерский учет</li>
            <li>VPN (Виртуальная частная сеть)</li>
        </ul>
        <p>Как только злоумышленник получает доступ к приложению, находящемуся за контролем доступа, уязвимостей и данных часто становится много.</p>
        <p>Учётные данные из системы также могут быть извлечены различными способами, обычно с доступом администратора к системе. Mimikatz (https://github.com/gentilkiwi/mimikatz) - такой инструмент, который пытается сбросить учетные данные из системы.</p>
        <hr>
        <div class="w3-clear nextprev">
            <a class="w3-left w3-btn" href="cybersecurity_prenetration_testing.php">&#10094; Prev</a>
            <a class="w3-right w3-btn" href="cybersecurity_security_operations.php">Next &#10095;</a>
        </div>
    </article>
<?php include '../include/addown_content.php'; ?>
    </div>
<?php include '../include/rightbar.php'; ?>
<?php include '../include/footer.php'; ?>